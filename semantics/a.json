
Logging sequence: 
tests/eval/good/let.scilexp:1:9 Let: x <- (Lit (Int32 42)) = ((Int32 42))
tests/eval/good/let.scilexp:2:26 Fun: Var z: (Variable x)
tests/eval/good/let.scilexp:2:9 Let: f <- (Fun: Var (z) Body: Variable x) = (<closure>)
tests/eval/good/let.scilexp:3:9 Variable: x -> ((Int32 42))
tests/eval/good/let.scilexp:3:9 Let: y <- (Variable x) = ((Int32 42))
tests/eval/good/let.scilexp:4:9 Variable: y -> ((Int32 42))
tests/eval/good/let.scilexp:4:9 Let: a <- (Variable y) = ((Int32 42))
tests/eval/good/let.scilexp:5:1 Variable: a -> ((Int32 42))

Flows: 
Variable x -> ( Lit (Int32 42) )
Variable f -> ( Fun: Var (z) Body: Variable x )
Variable y -> ( Variable x <- Lit (Int32 42) )
Variable a -> ( Variable y <- Variable x <- Lit (Int32 42) )
