
Logging sequence: 
Lit (Int32 42)
Let: x <- (Lit (Int32 42)) = ((Int32 42))
Fun: Var z: Int : (Variable x)
Let: f <- (Fun (Var z: Int): Body: Variable x ) = (<closure>)
Variable: x -> ((Int32 42))
Let: y <- (Variable x) = ((Int32 42))
Variable: y -> ((Int32 42))
Let: a <- (Variable y) = ((Int32 42))
Variable: a -> ((Int32 42))

Flows: 
Variable x: Int32 -> ((Lit (Int32 42): Int32))
Variable f: Int -> ((Fun (Var z: Int): Body: Variable x : Int))
Variable y: Int32 -> ((Variable x: Int32) <- (Lit (Int32 42): Int32))
Variable a: Int32 -> ((Variable y: Int32) <- (Variable x: Int32) <- (Lit (Int32 42): Int32))


Dict: 
(Variable y: Int32) ;(Variable f: Int) ;(Variable x: Int32) ;(Variable a: Int32)
