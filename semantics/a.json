
Logging sequence: 
































































Prelude:1:17 TFun: Var 'B: (Fun: Var (f) Body: Fixpoint)
Prelude:1:17 Fun: Var f: (Fixpoint)






Prelude:1:17 Fun: Var z: (Fun: Var (l) Body: MatchExpr l)
Prelude:1:37 Fun: Var l: (MatchExpr l)


Prelude:1:17 TFun: Var 'B: (Fun: Var (f) Body: Fixpoint)
Prelude:1:17 Fun: Var f: (Fixpoint)






Prelude:1:17 Fun: Var z: (Fun: Var (l) Body: MatchExpr l)
Prelude:1:37 Fun: Var l: (MatchExpr l)








































































































































































































































































































































































































































































tests/eval/good/type_subst1.scilexp:2:3 TFun: Var 'A: (TFun 'B)
tests/eval/good/type_subst1.scilexp:2:3 Let: tf <- (TFun 'A) = (<type_closure>)
tests/eval/good/type_subst1.scilexp:2:14 TFun: Var 'B: (Fun: Var (f) Body: Fun: Var (x) Body: App f --to--> (x ))
tests/eval/good/type_subst1.scilexp:4:3 Fun: Var f: (Fun: Var (x) Body: App f --to--> (x ))
tests/eval/good/type_subst1.scilexp:5:18 TApp: tf --to--> (Int64, Int128)
tests/eval/good/type_subst1.scilexp:5:18 Let: tf_applied <- (TApptf) = (<closure>)
tests/eval/good/type_subst1.scilexp:6:1 Variable: tf_applied -> (<closure>)

Flows: 
Variable tf -> ( TFun 'A )
Variable tf_applied -> ( TApptf )
